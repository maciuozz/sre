#In Kubernetes, a ServiceAccount is an identity for a pod. It allows the pod to authenticate and authorize with 
#the Kubernetes API server to access resources in the cluster. When a pod is created, if a ServiceAccount is not
#explicitly specified, Kubernetes will automatically create a default ServiceAccount for the pod.

#In a Helm chart, the serviceAccount.yaml file is used to define the Kubernetes ServiceAccount for the
#application. This allows you to specify a custom ServiceAccount with specific permissions and roles, rather
#than using the default ServiceAccount.

#By creating a specific ServiceAccount for the application, you can limit the permissions of the pod and provide 
#a more secure environment. This is especially important in multi-tenant environments, where different applications
#may have different levels of permissions and access to resources.

{{ if .Values.serviceAccount.create }}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "simple-server.serviceAccountName" . }}
  labels:
    {{- include "simple-server.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
{{- end }}
